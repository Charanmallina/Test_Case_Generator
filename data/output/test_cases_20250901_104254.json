{
  "metadata": {
    "total_test_cases": 8,
    "generated_at": "2025-09-01T10:43:14.076313",
    "success_rate": "8/8 (100.0%)",
    "model_used": "llama-3.3-70b-versatile",
    "source_file": "data/output/temp_filtered_20250901_104254.json"
  },
  "test_cases": [
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Customer Portal",
      "service": "Plan Management",
      "test_type": "Functional",
      "priority": "High",
      "severity": "Medium",
      "issue_description": "Customer is unable to change their plan immediately through the online portal and is forced to wait until the next billing cycle",
      "test_scenario": "Test that a customer can upgrade their plan immediately through the online portal without having to wait until the next billing cycle",
      "preconditions": [
        "Customer has an active account",
        "Customer has used most of their data for the current cycle",
        "Customer is trying to upgrade to a higher plan"
      ],
      "test_steps": [
        "Step 1: Login to the customer portal with a test account",
        "Step 2: Navigate to the plan management section",
        "Step 3: Attempt to upgrade to a higher plan",
        "Step 4: Verify that the system allows for an immediate plan change with a prorated charge",
        "Step 5: Verify that the system also offers a data add-on option"
      ],
      "expected_result": "The system should allow the customer to upgrade their plan immediately with a prorated charge or offer a data add-on option to get them through the current cycle",
      "actual_issue": "The system currently does not allow for immediate plan changes and forces the customer to wait until the next billing cycle",
      "environmental_dependencies": [
        "Browser type",
        "Device",
        "Network"
      ],
      "edge_cases": [
        "Test with different plan combinations",
        "Test with different data usage scenarios",
        "Test with multiple account types (e.g. individual, family plan)"
      ],
      "automation_feasibility": "High",
      "customer_impact": "Customer frustration, unnecessary support calls, and potential loss of business due to inability to meet customer needs in a timely manner",
      "source_call_id": "TW_WEB_002",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:42:57.791498"
    },
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Web Portal",
      "service": "Device Activation",
      "test_type": "Functional",
      "priority": "Critical",
      "severity": "High",
      "issue_description": "Port request gets stuck due to incomplete name matching between customer's account and external carrier account",
      "test_scenario": "Test that the web portal's device activation form collects all required information, including middle initials, to successfully port a number from another carrier",
      "preconditions": [
        "Customer has a new phone with a valid IMEI number",
        "Customer has an account with another carrier (e.g. Verizon) that includes a middle initial in the name"
      ],
      "test_steps": [
        "Step 1: Go to the device activation page on the web portal",
        "Step 2: Enter first name, last name, and middle initial (if applicable) in the corresponding fields",
        "Step 3: Enter external carrier account information, including name with middle initial",
        "Step 4: Submit the port request and verify that it is processed successfully"
      ],
      "expected_result": "The port request is successfully processed, and the customer's number is transferred to the new phone within a reasonable timeframe",
      "actual_issue": "The port request gets stuck due to incomplete name matching, causing service delays and customer dissatisfaction",
      "environmental_dependencies": [
        "Browser type (e.g. Chrome, Firefox)",
        "Device (e.g. desktop, mobile)"
      ],
      "edge_cases": [
        "Test with different types of names (e.g. names with suffixes, names with multiple middle initials)",
        "Test with different external carriers"
      ],
      "automation_feasibility": "Medium",
      "customer_impact": "Service delays, customer dissatisfaction, potential loss of business due to poor customer experience",
      "source_call_id": "TW_WEB_003",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:00.229856"
    },
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Web Portal",
      "service": "Billing and Roaming",
      "test_type": "Functional",
      "priority": "Critical",
      "severity": "High",
      "issue_description": "Customer is charged for international roaming without notification when their device connects to a stronger foreign tower near the border",
      "test_scenario": "Test that the system sends notifications to customers when their device connects to a foreign tower, even if they are still within their home country",
      "preconditions": [
        "Customer has a device with international roaming capabilities",
        "Customer is located near the border of their home country",
        "Foreign tower signal is stronger than domestic tower signal"
      ],
      "test_steps": [
        "Step 1: Enable international roaming on the customer's device",
        "Step 2: Move the device to a location near the border where a foreign tower signal is stronger than the domestic tower signal",
        "Step 3: Verify that the device connects to the foreign tower",
        "Step 4: Check for roaming notifications or warnings on the device",
        "Step 5: Verify that the customer's account is not charged for international roaming if they have not crossed the border"
      ],
      "expected_result": "The customer's device displays a notification or warning when it connects to a foreign tower, and the customer is not charged for international roaming if they have not crossed the border",
      "actual_issue": "Customers are being charged for international roaming without notification when their device connects to a foreign tower near the border",
      "environmental_dependencies": [
        "Device type",
        "Network provider",
        "Location near the border"
      ],
      "edge_cases": [
        "Device is in airplane mode",
        "Customer has international roaming disabled",
        "Foreign tower signal is not stronger than domestic tower signal"
      ],
      "automation_feasibility": "Medium",
      "customer_impact": "Unexpected charges and lack of transparency about international roaming usage",
      "source_call_id": "TW_WEB_004",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:02.594798"
    },
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Customer Portal",
      "service": "Device Purchase",
      "test_type": "Functional",
      "priority": "High",
      "severity": "High",
      "issue_description": "Pricing discrepancy between product page and checkout page for device purchase",
      "test_scenario": "Verify that pricing information is consistent and clearly indicates any conditions for promotional prices",
      "preconditions": [
        "User is logged in to their account",
        "User has an existing line to upgrade",
        "User navigates to the product page of a device with conditional pricing"
      ],
      "test_steps": [
        "Step 1: Verify the price displayed on the product page",
        "Step 2: Proceed to checkout with the device in the cart",
        "Step 3: Verify the price displayed on the checkout page",
        "Step 4: Check for any conditional pricing information (e.g. 'price with new line activation') on both the product page and checkout page"
      ],
      "expected_result": "The price displayed on the product page and checkout page should be the same, and any conditions for promotional prices should be clearly indicated on both pages",
      "actual_issue": "Pricing discrepancy between product page and checkout page due to unclear conditional pricing information",
      "environmental_dependencies": [
        "Browser type",
        "Device"
      ],
      "edge_cases": [
        "Test with different types of devices and plans",
        "Test with new line activation vs. upgrade scenarios"
      ],
      "automation_feasibility": "High",
      "customer_impact": "Customer time wasted, loss of trust due to misleading pricing information",
      "source_call_id": "TW_WEB_005",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:04.859511"
    },
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Customer Portal",
      "service": "Plan Management",
      "test_type": "Functional",
      "priority": "High",
      "severity": "Medium",
      "issue_description": "Plan change buttons are non-responsive for customers with multiple add-ons",
      "test_scenario": "Test plan change functionality for customers with multiple add-ons",
      "preconditions": [
        "Customer has an account with multiple add-ons (e.g. international calling and mobile hotspot)",
        "Customer is using a supported browser (e.g. Chrome)"
      ],
      "test_steps": [
        "Step 1: Log in to the customer portal with a test account that has multiple add-ons",
        "Step 2: Navigate to the plan change page",
        "Step 3: Click on the plan options buttons",
        "Step 4: Verify that the plan change feature responds as expected"
      ],
      "expected_result": "The plan change buttons should respond and allow the customer to change their plan",
      "actual_issue": "The plan change buttons are non-responsive and do not allow the customer to change their plan",
      "environmental_dependencies": [
        "Browser type (e.g. Chrome, Firefox)",
        "Device type (e.g. laptop, desktop)"
      ],
      "edge_cases": [
        "Test with different combinations of add-ons",
        "Test with different browser versions"
      ],
      "automation_feasibility": "High",
      "customer_impact": "Silent failures, customers are unable to change their plan, leading to frustration and potential churn",
      "source_call_id": "TW_WEB_006",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:07.521460"
    },
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Web Portal",
      "service": "Promotional Offers",
      "test_type": "Functional",
      "priority": "High",
      "severity": "High",
      "issue_description": "Existing customer unable to apply promotional code due to invalid validation",
      "test_scenario": "Test application of promotional code for existing customers",
      "preconditions": [
        "Existing customer account",
        "Valid promotional code for new customers",
        "Promotional code email sent to existing customer"
      ],
      "test_steps": [
        "Step 1: Log in to existing customer account on web portal",
        "Step 2: Navigate to phone purchase page",
        "Step 3: Enter promotional code for new customers",
        "Step 4: Verify error message displayed",
        "Step 5: Verify promotional code details page does not specify customer type restriction"
      ],
      "expected_result": "Promotional code should either be applied successfully or display a clear error message stating the code is only valid for new customers",
      "actual_issue": "Promotional code validation fails without clear error message, causing customer frustration",
      "environmental_dependencies": [
        "Browser type",
        "Device"
      ],
      "edge_cases": [
        "Test with different types of promotional codes",
        "Test with multiple existing customer accounts"
      ],
      "automation_feasibility": "High",
      "customer_impact": "Customer frustration and potential loss of sales due to invalid promotional code application",
      "source_call_id": "TW_until",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:09.665392"
    },
    {
      "test_case_id": "TC_WEBPORTAL_001",
      "domain": "Mobile App",
      "service": "Device Upgrade",
      "test_type": "Functional",
      "priority": "High",
      "severity": "High",
      "issue_description": "Mobile app crashes when selecting a new device for upgrade on Android devices with more than 100 apps installed",
      "test_scenario": "Test device upgrade feature on Android devices with varying number of installed apps",
      "preconditions": [
        "Android device with Total Wireless mobile app installed",
        "More than 100 apps installed on the device",
        "Device upgrade option available in the app"
      ],
      "test_steps": [
        "Step 1: Launch the Total Wireless mobile app on an Android device",
        "Step 2: Navigate to the device upgrade section",
        "Step 3: Select a new device for upgrade",
        "Step 4: Verify if the app crashes or throws an error",
        "Step 5: Repeat steps 2-4 with different numbers of installed apps (e.g., 50, 100, 150) to identify the threshold for the crash"
      ],
      "expected_result": "The mobile app should allow device upgrade selection without crashing, regardless of the number of installed apps",
      "actual_issue": "Mobile app crashes when selecting a new device for upgrade on Android devices with more than 100 apps installed, due to memory management issues",
      "environmental_dependencies": [
        "Android device (e.g., Google Pixel 6)",
        "Total Wireless mobile app",
        "Various numbers of installed apps"
      ],
      "edge_cases": [
        "Test with different Android versions",
        "Test with different device manufacturers",
        "Test with a large number of background apps running"
      ],
      "automation_feasibility": "Medium",
      "customer_impact": "Core functionality (device upgrade) is unavailable on mobile, forcing customers to use alternative channels, resulting in a poor customer experience",
      "source_call_id": "TW_phone",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:12.127970"
    },
    {
      "test_case_id": "TC_WEB_001",
      "domain": "Mobile App",
      "service": "Auto-Pay Management",
      "test_type": "Functional",
      "priority": "High",
      "severity": "Medium",
      "issue_description": "Customer unable to disable auto-pay in mobile app when enrolled through website",
      "test_scenario": "Test disabling auto-pay in mobile app for accounts enrolled through website",
      "preconditions": [
        "Customer has an account with auto-pay enabled through the website",
        "Customer has the latest version of the mobile app installed"
      ],
      "test_steps": [
        "Step 1: Log in to the mobile app with a test account that has auto-pay enabled through the website",
        "Step 2: Navigate to 'Account Settings' and then 'Payment Settings'",
        "Step 3: Verify that the option to disable auto-pay is available and functional"
      ],
      "expected_result": "The customer should be able to disable auto-pay from the mobile app, regardless of where it was originally enabled",
      "actual_issue": "The mobile app lacks the feature to disable auto-pay for accounts that enrolled through the website",
      "environmental_dependencies": [
        "Mobile device with latest OS version",
        "Latest version of the mobile app"
      ],
      "edge_cases": [
        "Test with different payment methods",
        "Test with multiple accounts and auto-pay settings"
      ],
      "automation_feasibility": "Medium",
      "customer_impact": "Customer frustration and inconvenience due to inability to manage account features through preferred channel",
      "source_call_id": "TW_WEB_010",
      "source_channel": "Web Portal",
      "generated_at": "2025-09-01T10:43:14.074211"
    }
  ]
}